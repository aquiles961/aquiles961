#include <stdio.h>
#define MAX_ROWS 10
#define MAX_COLUMNS 10

// Subprograma para ler uma matriz
void read_matrix(float matrix[MAX_ROWS][MAX_COLUMNS], int rows, int columns) {
    int i, j;
    for (i = 0; i < rows; i++) {
        for (j = 0; j < columns; j++) {
            printf("Digite o elemento [%d][%d]: ", i, j);
            scanf("%f", &matrix[i][j]);
        }
    }
}

// Subprograma para escrever uma matriz
void print_matrix(float matrix[MAX_ROWS][MAX_COLUMNS], int rows, int columns) {
    int i, j;
    for (i = 0; i < rows; i++) {
        for (j = 0; j < columns; j++) {
            printf("%.2f\t", matrix[i][j]);
        }
        printf("\n");
    }
}

// Subprograma para calcular a média de todos elementos de uma matriz
float mean_matrix(float matrix[MAX_ROWS][MAX_COLUMNS], int rows, int columns) {
    int i, j;
    float sum = 0;
    for (i = 0; i < rows; i++) {
        for (j = 0; j < columns; j++) {
            sum += matrix[i][j];
        }
    }
    return sum / (rows * columns);
}

// Subprograma para calcular a média de todos elementos de uma dada coluna k de uma matriz
float mean_column(float matrix[MAX_ROWS][MAX_COLUMNS], int rows, int column) {
    int i;
    float sum = 0;
    for (i = 0; i < rows; i++) {
        sum += matrix[i][column];
    }
    return sum / rows;
}

// Subprograma para calcular a média de todos elementos de uma dada linha l de uma matriz
float mean_row(float matrix[MAX_ROWS][MAX_COLUMNS], int row, int columns) {
    int j;
    float sum = 0;
    for (j = 0; j < columns; j++) {
        sum += matrix[row][j];
    }
    return sum / columns;
}

// Subprograma para contar o número de zeros que se encontram acima da diagonal principal de uma matriz
int count_zeros(float matrix[MAX_ROWS][MAX_COLUMNS], int rows, int columns) {
    int i, j, count = 0;
    for (i = 0; i < rows; i++) {
        for (j = i + 1; j < columns; j++) {
            if (matrix[i][j] == 0) {
                count++;
            }
        }
    }
    return count;
}

// Subprograma para determinar a linha de uma matriz que tem a soma dos seus elementos máxima
int linhaMaxima(float matriz[][MAX_COLUMNS], int linhas, int colunas) {
    int linhaMax = 0;
    float maxSoma = 0;
    
    for (int i = 0; i < linhas; i++) {
        float somaLinha = 0;
        
        for (int j = 0; j < colunas; j++) {
            somaLinha += matriz[i][j];
        }
        
        if (somaLinha > maxSoma) {
            maxSoma = somaLinha;
            linhaMax = i;
        }
    }
    
    return linhaMax;
}
// LINHA H
void trocaColunas(float matriz[][MAX_COLUMNS], int linhas, int colunas, int j, int k) {
    for (int i = 0; i < linhas; i++) {
        float temp = matriz[i][j];
        matriz[i][j] = matriz[i][k];
        matriz[i][k] = temp;
    }
}

//LINHA I
void somaMatrizes(float matrizA[][MAX_COLUMNS], float matrizB[][MAX_COLUMNS], float matrizResultado[][MAX_COLUMNS], int linhas, int colunas) {
    for (int i = 0; i < linhas; i++) {
        for (int j = 0; j < colunas; j++) {
            matrizResultado[i][j] = matrizA[i][j] + matrizB[i][j];
        }
    }
}

int main() {
int rows, columns;
float matrix[MAX_ROWS][MAX_COLUMNS], matrix2[MAX_ROWS][MAX_COLUMNS], matrixResult[MAX_ROWS][MAX_COLUMNS];

printf("Digite o numero de linhas da matriz: ");
scanf("%d", &rows);
printf("Digite o numero de colunas da matriz: ");
scanf("%d", &columns);

printf("\nLendo matriz 1:\n");
read_matrix(matrix, rows, columns);

printf("\nA matriz lida eh:\n");
print_matrix(matrix, rows, columns);

printf("\nA media de todos elementos da matriz eh: %.2f\n", mean_matrix(matrix, rows, columns));

int column;
printf("\nDigite o numero da coluna que deseja calcular a media: ");
scanf("%d", &column);
printf("A media da coluna %d eh: %.2f\n", column, mean_column(matrix, rows, column));

int row;
printf("\nDigite o numero da linha que deseja calcular a media: ");
scanf("%d", &row);
printf("A media da linha %d é: %.2f\n", row, mean_row(matrix, row, columns));

printf("\nO numero de zeros acima da diagonal principal eh: %d\n", count_zeros(matrix, rows, columns));

printf("\nA linha com a maior soma de elementos eh: %d\n", linhaMaxima(matrix, rows, columns));

int j, k;
printf("\nDigite o numero das colunas que deseja trocar (j k): ");
scanf("%d %d", &j, &k);
trocaColunas(matrix, rows, columns, j, k);
printf("\nA matriz apos a troca das colunas %d e %d é:\n", j, k);
print_matrix(matrix, rows, columns);

printf("\nLendo matriz 2:\n");
read_matrix(matrix2, rows, columns);

printf("\nA matriz lida eh:\n");
print_matrix(matrix2, rows, columns);

somaMatrizes(matrix, matrix2, matrixResult, rows, columns);
printf("\nA soma das matrizes eh:\n");
print_matrix(matrixResult, rows, columns);

return 0;
}
